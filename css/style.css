:root {
  --main-bg-color: #ddd;
}

* {
    box-sizing: border-box;
}

html {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    margin:0;padding:0;
}

body {
    background-color: var(--main-bg-color);
    user-select: none;
    -webkit-user-select: none;
    -webkit-touch-callout: none;
    margin:0;padding:0;
}



/*
-------------------------------------------------------------------
DICE
-------------------------------------------------------------------
*/

#dices {
    width: 100vw;
    height: 100vh;
    margin: 0;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    align-content: center;
}

.face {
	display: grid;
	grid-template-areas:
		"a . c"
		"e g f"
		"d . b";

	flex: 0 0 auto;
	margin: 6vmin;
	padding: 2vmin;
	width: 25vmin;
	height: 25vmin;

	background-color: #fff;
	border-radius: 10%;
    box-shadow: 0.5vmin 0.4vmin #ccc;
}

.face:empty {
    display: none;
}

.pip {
	display: block;
	align-self: center;
	justify-self: center;
	width: 80%;
	height: 80%;
	border-radius: 50%;
	background-color: #333;
}

.pip:nth-child(2) {
	grid-area: b;
}
.pip:nth-child(3) {
	grid-area: c;
}
.pip:nth-child(4) {
	grid-area: d;
}
.pip:nth-child(5) {
	grid-area: e;
}
.pip:nth-child(6) {
	grid-area: f;
}
/* This selects the last pip of odd-valued dice (1, 3, 5) and positions the pip in the center */
.pip:nth-child(odd):last-child {
	grid-area: g;
}

.animated {
  animation: shake 0.8s cubic-bezier(.36,.07,.19,.97) both;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
}

.face:nth-child(1) {
	animation-delay: 0.20s;
}

.face:nth-child(2) {
	animation-delay: 0.04s;
	animation-direction:reverse;
}

.face:nth-child(3) {
	animation-delay: 0.24s;
}

.face:nth-child(4) {
	animation-delay: 0.16s;
	animation-direction:reverse;
}

.face:nth-child(5) {
	animation-delay: 0.08s;
}

.face:nth-child(6) {
	animation-delay: 0.12s;
	animation-direction:reverse;
}

@keyframes shake {
  10%, 90% {
    transform: translate3d(-1vmin, 0, 0);
  }

  20%, 80% {
    transform: translate3d(2vmin, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-3vmin, 0, 0);
  }

  40%, 60% {
    transform: translate3d(3vmin, 0, 0);
  }
}


/*
-------------------------------------------------------------------
MEDIA QUERIES
-------------------------------------------------------------------
*/
